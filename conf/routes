# Application
GET     /                                                   controllers.Application.index
GET     /profile                                            controllers.Application.profile
POST    /crew                                               controllers.Application.updateCrew
POST    /pillar                                             controllers.Application.updatePillar
GET     /task                                               controllers.Application.task
POST    /user/update                                        controllers.Application.updateBase
POST    /user/uploadAvatar                                  controllers.Files.uploadProfileImage
GET     /file/get/:id                                       controllers.Files.get(id: String)


GET     /crews/init                                         controllers.Application.initCrews
GET     /crews/fixID                                        controllers.Application.fixCrewsID
GET     /users/init/:number/:specialRoleUsers               controllers.Application.initUsers(number: Int, specialRoleUsers : Int)

# Roles
GET     /roles                                              controllers.Roles.index
POST    /roles/update                                       controllers.Roles.update

# Rest api
GET     /rest/profile                                       controllers.RestApi.profile
POST    /rest/user/create                                  controllers.RestApi.createUser
PUT     /rest/user/:id/avatar                              controllers.RestApi.updateUserProfileImage(id : java.util.UUID)
POST    /rest/user                                         controllers.RestApi.getUsers
POST    /rest/user/:id                                     controllers.RestApi.getUser(id : java.util.UUID)
PUT     /rest/user/:id                                     controllers.RestApi.updateUser(id : java.util.UUID)
DELETE  /rest/user/:id                                     controllers.RestApi.deleteUser(id: java.util.UUID)

GET     /rest/user/:id/task                                 controllers.RestApi.getTasksForUser(id: java.util.UUID)
GET     /rest/user/:id/access                               controllers.RestApi.getAccessRightsForUser(id: java.util.UUID)
POST    /rest/crew                                         controllers.RestApi.crews
GET     /rest/task                                          controllers.RestApi.getTasks
POST    /rest/task                                          controllers.RestApi.createTask
GET     /rest/task/:id                                      controllers.RestApi.getTasksWithAccessRights(id: Long)
DELETE  /rest/task/:id                                      controllers.RestApi.deleteTask(id: Long)
GET     /rest/access                                        controllers.RestApi.getAccessRights(q: String, f: String)
GET     /rest/access/:id                                    controllers.RestApi.findAccessRight(id: Long)
DELETE  /rest/access/:id                                    controllers.RestApi.deleteAccessRight(id: Long)
POST    /rest/access                                        controllers.RestApi.createAccessRight

#Pool1User Rest API
POST 		/rest/pool1user/create															controllers.RestApi.createPool1User	

# OAuth2 Rest API
GET     /oauth2/rest/profile                                controllers.Oauth2RestApi.profile
GET     /oauth2/code/get/:clientId                          controllers.OAuth2Controller.getCode(clientId : String)

# Authentication
GET     /auth/init                                          controllers.Auth.init

GET     /auth/signup                                        controllers.Auth.startSignUp
POST    /auth/signup                                        controllers.Auth.handleStartSignUp
GET     /auth/signup/:token                                 controllers.Auth.signUp(token:String)

GET     /auth/signin                                        controllers.Auth.signIn
POST    /auth/authenticate                                  controllers.Auth.authenticate
GET     /auth/signout                                       controllers.Auth.signOut


GET     /auth/reset                                         controllers.Auth.startResetPassword
POST    /auth/reset                                         controllers.Auth.handleStartResetPassword
GET  	  /auth/pool1/:email																	controllers.Auth.handlePool1StartResetPassword(email:String)
GET     /auth/reset/:token                                  controllers.Auth.resetPassword(token:String)
POST    /auth/reset/:token                                  controllers.Auth.handleResetPassword(token:String)

GET     /auth/social/:providerId                            controllers.Auth.socialAuthenticate(providerId:String)

# OAuth 2 Server
GET     /oauth2/access_token                                controllers.OAuth2Controller.accessToken
GET     /oauth2/register                                    controllers.Application.registration
POST    /oauth2/register                                    controllers.Application.registerOAuth2Client

# Public assets
GET     /assets/*file                                       controllers.Assets.versioned(path="/public", file: Asset)
GET     /webjars/*file                                      controllers.WebJarAssets.at(file)
